services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: my-php-app
        container_name: app
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - '.:/var/www'
        networks:
            - sail  # Use the sail network instead of app-network
        depends_on:
            - mysql  # Refer to the mysql service provided by Sail

    webserver:
        image: 'nginx:alpine'
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - './nginx.conf:/etc/nginx/nginx.conf'
            - './public:/var/www/public'
        networks:
            - sail  # Use the sail network instead of app-network
        depends_on:
            - app

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    selenium:
        image: selenium/standalone-chrome
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
